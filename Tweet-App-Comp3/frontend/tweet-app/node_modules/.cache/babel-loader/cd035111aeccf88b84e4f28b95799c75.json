{"ast":null,"code":"var _jsxFileName = \"S:\\\\Cognizant-Training\\\\FSE1\\\\Project-demo\\\\Tweet-App-Comp3\\\\Tweet-App-Comp3\\\\frontend\\\\tweet-app\\\\src\\\\features\\\\users\\\\profile\\\\GetAllTweetsOfUser.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Header, Item, Button } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GetAllTweetsOfUser = _ref => {\n  _s();\n\n  let {\n    username\n  } = _ref;\n  const {\n    tweetStore,\n    userStore\n  } = useStore();\n  const {\n    givenUserTweets,\n    deleteTweet,\n    loading\n  } = tweetStore;\n\n  const handleDelete = (username, id) => {\n    deleteTweet(username, id);\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Segment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        icon: \"twitter square\",\n        as: \"h2\",\n        content: \"All tweets:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Item.Group, {\n        divided: true,\n        children: givenUserTweets(username).map(tweet => {\n          var _tweet$user, _userStore$user;\n\n          return /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(Item.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Item.Header, {\n                children: [\"# \", tweet === null || tweet === void 0 ? void 0 : tweet.tag]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Item.Description, {\n                children: [\" \", tweet === null || tweet === void 0 ? void 0 : tweet.subject]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Item.Extra, {\n                children: [((_tweet$user = tweet.user) === null || _tweet$user === void 0 ? void 0 : _tweet$user.email) === ((_userStore$user = userStore.user) === null || _userStore$user === void 0 ? void 0 : _userStore$user.email) && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    floated: \"right\",\n                    as: Link,\n                    to: `/update-tweet/${tweet.id}`,\n                    icon: \"edit\",\n                    color: \"blue\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 33,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    floated: \"right\",\n                    icon: \"trash\",\n                    onClick: () => handleDelete(tweet.user.email, tweet.id),\n                    color: \"red\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n                  floated: \"right\",\n                  icon: \"info\",\n                  color: \"blue\",\n                  as: Link,\n                  to: `/details/${tweet.id}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 9\n            }, this)\n          }, tweet.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(GetAllTweetsOfUser, \"GGe+OESvrGc9qH3vkpGJg1ISJFw=\", false, function () {\n  return [useStore];\n});\n\n_c = GetAllTweetsOfUser;\nexport default _c2 = observer(GetAllTweetsOfUser);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetAllTweetsOfUser\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["observer","Link","Segment","Header","Item","Button","LoadingComponent","useStore","GetAllTweetsOfUser","username","tweetStore","userStore","givenUserTweets","deleteTweet","loading","handleDelete","id","map","tweet","tag","subject","user","email"],"sources":["S:/Cognizant-Training/FSE1/Project-demo/Tweet-App-Comp3/Tweet-App-Comp3/frontend/tweet-app/src/features/users/profile/GetAllTweetsOfUser.tsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Item, Button } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\ninterface Props {\r\n\tusername: string;\r\n}\r\nconst GetAllTweetsOfUser = ({ username }: Props) => {\r\n\tconst { tweetStore, userStore } = useStore();\r\n\tconst { givenUserTweets, deleteTweet, loading } = tweetStore;\r\n\r\n\tconst handleDelete = (username: string, id: number) => {\r\n\t\tdeleteTweet(username, id);\r\n\t};\r\n\r\n\tif (loading) return <LoadingComponent />;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Segment>\r\n\t\t\t\t<Header icon={\"twitter square\"} as=\"h2\" content=\"All tweets:\" />\r\n\t\t\t\t<hr />\r\n\t\t\t\t<Item.Group divided>\r\n\t\t\t\t\t{givenUserTweets(username).map((tweet) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Item key={tweet.id}>\r\n\t\t\t\t\t\t\t\t<Item.Content>\r\n\t\t\t\t\t\t\t\t\t<Item.Header># {tweet?.tag}</Item.Header>\r\n\t\t\t\t\t\t\t\t\t<Item.Description> {tweet?.subject}</Item.Description>\r\n\t\t\t\t\t\t\t\t\t<Item.Extra>\r\n\t\t\t\t\t\t\t\t\t\t{tweet.user?.email === userStore.user?.email && (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tas={Link}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/update-tweet/${tweet.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon=\"edit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"blue\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon=\"trash\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDelete(tweet.user!.email, tweet.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\t\t\t\t\t\t\ticon=\"info\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"blue\"\r\n\t\t\t\t\t\t\t\t\t\t\tas={Link}\r\n\t\t\t\t\t\t\t\t\t\t\tto={`/details/${tweet.id}`}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Item.Extra>\r\n\t\t\t\t\t\t\t\t</Item.Content>\r\n\t\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Item.Group>\r\n\t\t\t</Segment>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default observer(GetAllTweetsOfUser);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}