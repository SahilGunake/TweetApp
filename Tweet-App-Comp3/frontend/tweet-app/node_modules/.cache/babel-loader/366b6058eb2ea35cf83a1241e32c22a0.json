{"ast":null,"code":"import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { store } from \"./store\";\n\nclass UserStore {\n  constructor() {\n    this.users = [];\n    this.user = null;\n    this.loading = false;\n    this.loadingInitial = true;\n    this.firstTime = false;\n    this.loggedOut = false;\n\n    this.loadUsers = async () => {\n      try {\n        const response = await agent.UserRequest.list();\n        runInAction(() => {\n          response.result.forEach(user => {\n            this.users.push(user);\n          });\n          this.loadingInitial = false;\n        });\n      } catch (error) {\n        console.log(error);\n        runInAction(() => {\n          this.loadingInitial = false;\n        });\n      }\n    };\n\n    this.setLoadingInitial = state => {\n      this.loadingInitial = state;\n    };\n\n    this.login = async credentials => {\n      try {\n        const response = await agent.UserRequest.login(credentials);\n\n        if (response.isSuccess) {\n          store.commonStore.setToken(response.token);\n          runInAction(() => {\n            this.user = response.result; //console.log(this.user);\n\n            this.loggedOut = false;\n          });\n          store.modalStore.closeModal();\n        } else {\n          throw new Error(\"invalid username or password\");\n        }\n      } catch (error) {\n        throw error;\n      }\n    };\n\n    this.getUser = async () => {\n      try {\n        if (this.firstTime || this.loadingInitial) {\n          const response = await agent.UserRequest.current();\n\n          if (response.isSuccess) {\n            runInAction(() => this.user = response.result);\n          }\n        } else {\n          this.firstTime = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.logout = () => {\n      this.loggedOut = true;\n      store.commonStore.setToken(null);\n      window.localStorage.removeItem(\"jwt\");\n      this.user = null;\n      history.push(\"/\");\n    };\n\n    this.forgotPassword = async credentials => {\n      console.log(credentials);\n\n      try {\n        var forgot = {\n          password: credentials.password\n        };\n        await agent.UserRequest.forgotPassword(credentials.username, forgot);\n        store.modalStore.closeModal();\n        history.push(\"/\");\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.register = async credentials => {\n      try {\n        const response = await agent.UserRequest.register(credentials);\n\n        if (response.isSuccess) {\n          runInAction(() => {\n            this.user = response.result;\n          });\n          var cred = {\n            username: response.result.email,\n            password: credentials.password\n          };\n          this.login(cred);\n        } else {\n          throw new Error(\"invalid username or password\");\n        }\n      } catch (error) {\n        throw error;\n      }\n    };\n\n    this.getUserByUsername = async username => {\n      try {\n        var response = await agent.UserRequest.search(username);\n        console.log(response.result);\n      } catch (error) {}\n    };\n\n    makeAutoObservable(this);\n  }\n\n  get isLoggedIn() {\n    return !!this.user;\n  }\n\n  setImage(image) {\n    this.user.image = image;\n  }\n\n}\n\nexport default UserStore;","map":{"version":3,"names":["makeAutoObservable","runInAction","history","agent","store","UserStore","constructor","users","user","loading","loadingInitial","firstTime","loggedOut","loadUsers","response","UserRequest","list","result","forEach","push","error","console","log","setLoadingInitial","state","login","credentials","isSuccess","commonStore","setToken","token","modalStore","closeModal","Error","getUser","current","logout","window","localStorage","removeItem","forgotPassword","forgot","password","username","register","cred","email","getUserByUsername","search","isLoggedIn","setImage","image"],"sources":["S:/Cognizant-Training/FSE1/Project-demo/Tweet-App-Comp3/Tweet-App-Comp3/frontend/tweet-app/src/app/stores/userStore.ts"],"sourcesContent":["import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { Forgot, LoginUser, RegisterUser, User } from \"../models/User\";\r\nimport { store } from \"./store\";\r\nclass UserStore {\r\n\tusers: User[] = [];\r\n\tuser: User | null = null;\r\n\tloading: boolean = false;\r\n\tloadingInitial: boolean = true;\r\n\tfirstTime: boolean = false;\r\n\tloggedOut: boolean = false;\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tloadUsers = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await agent.UserRequest.list();\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tresponse.result.forEach((user) => {\r\n\t\t\t\t\tthis.users.push(user);\r\n\t\t\t\t});\r\n\t\t\t\tthis.loadingInitial = false;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.loadingInitial = false;\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tsetLoadingInitial = (state: boolean) => {\r\n\t\tthis.loadingInitial = state;\r\n\t};\r\n\r\n\tget isLoggedIn() {\r\n\t\treturn !!this.user;\r\n\t}\r\n\r\n\tlogin = async (credentials: LoginUser) => {\r\n\t\ttry {\r\n\t\t\tconst response = await agent.UserRequest.login(credentials);\r\n\t\t\tif (response.isSuccess) {\r\n\t\t\t\tstore.commonStore.setToken(response.token!);\r\n\t\t\t\trunInAction(() => {\r\n\t\t\t\t\tthis.user = response.result;\r\n\t\t\t\t\t//console.log(this.user);\r\n\t\t\t\t\tthis.loggedOut = false;\r\n\t\t\t\t});\r\n\t\t\t\tstore.modalStore.closeModal();\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"invalid username or password\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t};\r\n\r\n\tgetUser = async () => {\r\n\t\ttry {\r\n\t\t\tif (this.firstTime || this.loadingInitial) {\r\n\t\t\t\tconst response = await agent.UserRequest.current();\r\n\t\t\t\tif (response.isSuccess) {\r\n\t\t\t\t\trunInAction(() => (this.user = response.result));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.firstTime = true;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tlogout = () => {\r\n\t\tthis.loggedOut = true;\r\n\t\tstore.commonStore.setToken(null);\r\n\t\twindow.localStorage.removeItem(\"jwt\");\r\n\t\tthis.user = null;\r\n\t\thistory.push(\"/\");\r\n\t};\r\n\r\n\tforgotPassword = async (credentials: LoginUser) => {\r\n\t\tconsole.log(credentials);\r\n\t\ttry {\r\n\t\t\tvar forgot: Forgot = {\r\n\t\t\t\tpassword: credentials.password,\r\n\t\t\t};\r\n\t\t\tawait agent.UserRequest.forgotPassword(credentials.username, forgot);\r\n\t\t\tstore.modalStore.closeModal();\r\n\t\t\thistory.push(\"/\");\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tregister = async (credentials: RegisterUser) => {\r\n\t\ttry {\r\n\t\t\tconst response = await agent.UserRequest.register(credentials);\r\n\t\t\tif (response.isSuccess) {\r\n\t\t\t\trunInAction(() => {\r\n\t\t\t\t\tthis.user = response.result;\r\n\t\t\t\t});\r\n\t\t\t\tvar cred: LoginUser = {\r\n\t\t\t\t\tusername: response.result.email,\r\n\t\t\t\t\tpassword: credentials.password,\r\n\t\t\t\t};\r\n\t\t\t\tthis.login(cred);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"invalid username or password\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t};\r\n\r\n\tgetUserByUsername = async (username: string) => {\r\n\t\ttry {\r\n\t\t\tvar response = await agent.UserRequest.search(username);\r\n\t\t\tconsole.log(response.result);\r\n\t\t} catch (error) {}\r\n\t};\r\n\r\n\tsetImage(image: string) {\r\n\t\tthis.user!.image = image;\r\n\t}\r\n}\r\n\r\nexport default UserStore;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}