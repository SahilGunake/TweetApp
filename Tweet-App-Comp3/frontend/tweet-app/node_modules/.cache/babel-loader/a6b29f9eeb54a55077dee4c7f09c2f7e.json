{"ast":null,"code":"var _jsxFileName = \"S:\\\\Cognizant-Training\\\\FSE1\\\\Project-demo\\\\Tweet-App-Comp3\\\\Tweet-App-Comp3\\\\frontend\\\\tweet-app\\\\src\\\\features\\\\tweets\\\\details\\\\TweetDetailedHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport { Button, Header, Item, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = _s(observer(_c = _s(function TweetDetailedHeader(_ref) {\n  var _tweet$user, _tweet$user2;\n\n  _s();\n\n  let {\n    tweet\n  } = _ref;\n  const {\n    tweetStore,\n    userStore\n  } = useStore();\n  const {\n    postALike\n  } = tweetStore;\n  const {\n    user\n  } = userStore;\n\n  const handleLike = id => {\n    postALike(id, user);\n  };\n\n  useEffect(() => {\n    if (tweetStore.userTweetLikeRegistry.size <= 0) {\n      tweetStore.loadLikeUsers();\n    }\n  }, [tweetStore.userTweetLikeRegistry.size, tweetStore.userTweetLikeRegistry.values.length, tweetStore.loadLikeUsers, tweetStore.loading]);\n  return /*#__PURE__*/_jsxDEV(Segment.Group, {\n    children: [/*#__PURE__*/_jsxDEV(Segment, {\n      children: /*#__PURE__*/_jsxDEV(Item.Group, {\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(Item.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              size: \"huge\",\n              content: `#${tweet.tag}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: format(Date.parse(tweet.datePosted), \"dd MMM yyyy\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Hosted by\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [(_tweet$user = tweet.user) === null || _tweet$user === void 0 ? void 0 : _tweet$user.firstName, \" \", (_tweet$user2 = tweet.user) === null || _tweet$user2 === void 0 ? void 0 : _tweet$user2.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      clearing: true,\n      attached: \"bottom\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"teal\",\n        icon: \"like\",\n        onClick: () => handleLike(tweet.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n}, \"oimYtRY/IIQMUWHkzjAeZJUBqKA=\", false, function () {\n  return [useStore];\n})), \"oimYtRY/IIQMUWHkzjAeZJUBqKA=\", false, function () {\n  return [useStore];\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$observer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["observer","useEffect","Button","Header","Item","Segment","useStore","format","TweetDetailedHeader","tweet","tweetStore","userStore","postALike","user","handleLike","id","userTweetLikeRegistry","size","loadLikeUsers","values","length","loading","tag","Date","parse","datePosted","firstName","lastName"],"sources":["S:/Cognizant-Training/FSE1/Project-demo/Tweet-App-Comp3/Tweet-App-Comp3/frontend/tweet-app/src/features/tweets/details/TweetDetailedHeader.tsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button, Header, Item, Segment, Image } from \"semantic-ui-react\";\r\nimport { Tweet } from \"../../../app/models/Tweet\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface Props {\r\n\ttweet: Tweet;\r\n}\r\n\r\nexport default observer(function TweetDetailedHeader({ tweet }: Props) {\r\n\tconst { tweetStore, userStore } = useStore();\r\n\tconst { postALike } = tweetStore;\r\n\tconst { user } = userStore;\r\n\r\n\tconst handleLike = (id: number) => {\r\n\t\tpostALike(id, user!);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (tweetStore.userTweetLikeRegistry.size <= 0) {\r\n\t\t\ttweetStore.loadLikeUsers();\r\n\t\t}\r\n\t}, [tweetStore.userTweetLikeRegistry.size, tweetStore.userTweetLikeRegistry.values.length, tweetStore.loadLikeUsers, tweetStore.loading]);\r\n\r\n\treturn (\r\n\t\t<Segment.Group>\r\n\t\t\t<Segment>\r\n\t\t\t\t<Item.Group>\r\n\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t<Item.Content>\r\n\t\t\t\t\t\t\t<Header size=\"huge\" content={`#${tweet.tag}`} />\r\n\t\t\t\t\t\t\t<p>{format(Date.parse(tweet.datePosted), \"dd MMM yyyy\")}</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tHosted by{\" \"}\r\n\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t{tweet.user?.firstName} {tweet.user?.lastName}\r\n\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</Item.Content>\r\n\t\t\t\t\t</Item>\r\n\t\t\t\t</Item.Group>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment clearing attached=\"bottom\">\r\n\t\t\t\t<Button color=\"teal\" icon=\"like\" onClick={() => handleLike(tweet.id)} />\r\n\t\t\t</Segment>\r\n\t\t</Segment.Group>\r\n\t);\r\n});\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,SAASC,SAAT,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,OAA/B,QAAqD,mBAArD;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAMA,wBAAeP,QAAQ,SAAC,SAASQ,mBAAT,OAA+C;EAAA;;EAAA;;EAAA,IAAlB;IAAEC;EAAF,CAAkB;EACtE,MAAM;IAAEC,UAAF;IAAcC;EAAd,IAA4BL,QAAQ,EAA1C;EACA,MAAM;IAAEM;EAAF,IAAgBF,UAAtB;EACA,MAAM;IAAEG;EAAF,IAAWF,SAAjB;;EAEA,MAAMG,UAAU,GAAIC,EAAD,IAAgB;IAClCH,SAAS,CAACG,EAAD,EAAKF,IAAL,CAAT;EACA,CAFD;;EAIAZ,SAAS,CAAC,MAAM;IACf,IAAIS,UAAU,CAACM,qBAAX,CAAiCC,IAAjC,IAAyC,CAA7C,EAAgD;MAC/CP,UAAU,CAACQ,aAAX;IACA;EACD,CAJQ,EAIN,CAACR,UAAU,CAACM,qBAAX,CAAiCC,IAAlC,EAAwCP,UAAU,CAACM,qBAAX,CAAiCG,MAAjC,CAAwCC,MAAhF,EAAwFV,UAAU,CAACQ,aAAnG,EAAkHR,UAAU,CAACW,OAA7H,CAJM,CAAT;EAMA,oBACC,QAAC,OAAD,CAAS,KAAT;IAAA,wBACC,QAAC,OAAD;MAAA,uBACC,QAAC,IAAD,CAAM,KAAN;QAAA,uBACC,QAAC,IAAD;UAAA,uBACC,QAAC,IAAD,CAAM,OAAN;YAAA,wBACC,QAAC,MAAD;cAAQ,IAAI,EAAC,MAAb;cAAoB,OAAO,EAAG,IAAGZ,KAAK,CAACa,GAAI;YAA3C;cAAA;cAAA;cAAA;YAAA,QADD,eAEC;cAAA,UAAIf,MAAM,CAACgB,IAAI,CAACC,KAAL,CAAWf,KAAK,CAACgB,UAAjB,CAAD,EAA+B,aAA/B;YAAV;cAAA;cAAA;cAAA;YAAA,QAFD,eAGC;cAAA,wBACW,GADX,eAEC;gBAAA,0BACEhB,KAAK,CAACI,IADR,gDACE,YAAYa,SADd,uBAC0BjB,KAAK,CAACI,IADhC,iDAC0B,aAAYc,QADtC;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFD;YAAA;cAAA;cAAA;cAAA;YAAA,QAHD;UAAA;YAAA;YAAA;YAAA;UAAA;QADD;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA,QADD,eAiBC,QAAC,OAAD;MAAS,QAAQ,MAAjB;MAAkB,QAAQ,EAAC,QAA3B;MAAA,uBACC,QAAC,MAAD;QAAQ,KAAK,EAAC,MAAd;QAAqB,IAAI,EAAC,MAA1B;QAAiC,OAAO,EAAE,MAAMb,UAAU,CAACL,KAAK,CAACM,EAAP;MAA1D;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA,QAjBD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAuBA,CAtCsB;EAAA,QACYT,QADZ;AAAA,GAAvB;EAAA,QACmCA,QADnC;AAAA"},"metadata":{},"sourceType":"module"}